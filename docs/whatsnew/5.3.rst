.. _whatsnew-5.3:

**************************
What's New in Astropy 5.3?
**************************

Overview
========

Astropy 5.3 is a major release that adds significant new functionality since
the 5.2 release.

In particular, this release includes:

.. * :ref:`whatsnew-5.3-table-union-operators`

In addition to these major changes, Astropy v5.3 includes a large number of
smaller improvements and bug fixes, which are described in the :ref:`changelog`.
By the numbers:

* X issues have been closed since v4.2
* X pull requests have been merged since v4.2
* X distinct people have contributed code

.. _whatsnew-5.3-cosmology:

New flat :mod:`astropy.cosmology` classes
=========================================

Two new cosmologies have been added, :class:`~astropy.cosmology.FlatwpwaCDM` and
:class:`~astropy.cosmology.Flatw0wzCDM`, which are the flat variants of
:class:`~astropy.cosmology.wpwaCDM` and :class:`~astropy.cosmology.w0wzCDM`,
respectively.

    >>> from astropy.cosmology import Flatw0wzCDM
    >>> cosmo = Flatw0wzCDM(H0=70, Om0=0.3, w0=-0.9, wz=0.2)
    >>> cosmo.comoving_distance(0.5)  # doctest: +SKIP
    <Quantity 1982.66012926 Mpc>

.. _whatsnew-5.3-table-union-operators:

New union operators for |Table|
===============================

We have added support for dictionary-style merge (``|``) and update (``|=``)
of columns in the |Table| class. This follows the  behavior for ``dict`` defined
in `PEP 584 <https://peps.python.org/pep-0584/>`_. ``|=`` works the same way as
:meth:`~astropy.table.Table.update` and updates the table in place. ``|``
return the updated table::

	>>> from astropy.table import Table, QTable
	>>> t1 = Table({'a': ['foo', 'bar'], 'b': [0., 0.]})
	>>> t2 = QTable({'b': [1., 2.], 'c': [7., 11.]})
	>>> t3 = t1 | t2  # Create new table which merges columns from t1 and t2
	>>> t3
	<Table length=2>
	a      b       c
	str3 float64 float64
	---- ------- -------
	foo     1.0     7.0
	bar     2.0    11.0

	>>> t2 |= t1  # Update t2 columns in-place with t1 columns
	>>> t2
	<QTable length=2>
	   b       c     a
	float64 float64 str3
	------- ------- ----
	    0.0     7.0  foo
	    0.0    11.0  bar

When using ``|=``, the other object does not need to be a |Table|, it can be
anything that can be used for :ref:`construct_table` with a compatible number
of rows.
.. _whatsnew-5.3-compressed-fits:

Efficient data access for compressed FITS files
===============================================

In previous astropy versions, when accessing data for a compressed
FITS file via the :attr:`~astropy.io.fits.CompImageHDU.data` property of
:class:`~astropy.io.fits.CompImageHDU`,
the whole data was read in and decompressed even if only a small part of
the data was required. The :class:`~astropy.io.fits.CompImageHDU` class
now has a :attr:`~astropy.io.fits.CompImageHDU.section` property which
can be used to access specific sections of the data and will result in
as little data as possible being read in and decompressed. For a compressed
image:

.. doctest-skip::

    >>> hdu.section[300:400, 100:200]

will therefore return the same result as:

.. doctest-skip::

    >>> hdu.data[300:400, 100:200]

but the former will be faster. The exact speedup will depend on the size of the
data and the size of the tiles but could be 10-100x or more.


.. _whatsnew-5.3-unit-formats-inline:

New "inline" option for ``"unicode"``, ``"console"``, and ``"latex"`` unit formats
==================================================================================

A new formatting option for unit is added to switch between inline and
multiline prettyprinting of quantities::

	>>> import astropy.units as u
	>>> unit = u.Unit("erg / (s cm2)")
	>>> print(unit.to_string('console'))
	erg s^-1 cm^-2
	>>> print(unit.to_string('console', inline=False))
         erg
        ------
        s cm^2
	>>> print(unit.to_string('unicode'))
	erg s⁻¹ cm⁻²
	>>> print(unit.to_string('unicode', inline=False))
         erg
        ─────
        s cm²

Note that the ``"console"`` and ``"unicode"`` formats now use
``inline=False`` as default, while for ``"latex"`` the default remains
``inline=True``, for an unchanged experience with IPython notebook.

Full change log
===============

To see a detailed list of all changes in version v5.3, including changes in
API, please see the :ref:`changelog`.
